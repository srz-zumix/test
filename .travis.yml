language: cpp

compiler:
  - clang
  - gcc

before_install:
  - sudo easy_install cpp-coveralls

install:
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-get -qq update
  - if [ "${CXX}" = 'gcc' ]; then
    sudo apt-get -qq install g++-4.8; \
    sudo update-alternatives --install /usr/bin/gcc  gcc  /usr/bin/gcc-4.8 90; \
    sudo update-alternatives --install /usr/bin/g++  g++  /usr/bin/g++-4.8 90; \
    sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.8 90; \
  fi
  # clang 3.5
  - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
  - sudo add-apt-repository --yes 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise main'
  - sudo apt-get -qq update
  - sudo apt-get -qq install clang-3.5
  - ls /usr/bin/clang*

env:
  global:
    # Your normal Travis CI build command
    # Normally this would be in the script: tag of .travis.yml, instead place it here
    - STANDARD_BUILD_COMMAND="cd ./test; make;"

    # -- BEGIN Coverity Scan ENV

    # Pre-configuration steps that should not be analyzed
    # i.e. "./configure"
    - COVERITY_SCAN_BUILD_COMMAND_PREPEND="cd ./test"

    # The build command with all of the arguments that you would apply to a manual `cov-build`
    # Usually this is the same as STANDARD_BUILD_COMMAND, exluding the automated test arguments
    #
    # Examples:
    # make -j4
    # mvn -f pom.xml
    # ant -buildfile test.xml
    - COVERITY_SCAN_BUILD_COMMAND="make"

    - PROJECT_NAME="srz-zumix/test"

    # Email address for notifications related to this build
    - OWNER_EMAIL="zumix.cpp@gmail.com"

    # Regular expression selects on which branches to run analysis
    # Be aware of quotas. Do not run on every branch/commit
    - COVERITY_SCAN_BRANCH_PATTERN="master"

    # COVERITY_SCAN_TOKEN via "travis encrypt" using the repo's public key
    - secure: "fLbe9HZULOVprBTkz49A8MILgPGUYpVOvBia6r8PJuw21wACrMqmNqYaqm4YFYXk+xTQp4ghfsCxNbP3ToSLy5ugfYxvmZN/VqgJ7NmbSgfp0RgE4NIWJ/8mjUwQMaAn6cjvLoJkjksN5t14l4Bhg0tahyC8x9gErqhlvGto4+Q="

    - COVERITY_SCAN_BUILD_URL="https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh"
    - COVERITY_SCAN_BUILD="curl -s $COVERITY_SCAN_BUILD_URL | bash"

    # -- END Coverity Scan ENV

  # Note: Your build matrix configuration may vary. Consult Travis CI Docs for more information
  # http://docs.travis-ci.com/user/build-configuration/#The-Build-Matrix

  matrix:
   #- STDFLAG=-std=c++98
   #- STDFLAG=-std=c++0x
   - USE_COVERAGE=1
   #- COVERITY_SCAN=1

matrix:
  exclude:
    - compiler: clang
      env: USE_COVERAGE=1
    - compiler: clang
      env: COVERITY_SCAN=1

script:
  - clang++ --version
  - g++ --version
  - gcov -v
  - if [ "${COVERITY_SCAN}" = '1' ]; then eval "$COVERITY_SCAN_BUILD"; else eval "$STANDARD_BUILD_COMMAND"; fi

after_success:
  - if [ "${USE_COVERAGE}" = '1' ]; then cd ./test; make send-coverage; fi
 
